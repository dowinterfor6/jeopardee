{"version":3,"sources":["components/Landing.jsx","components/GameLanding.jsx","temp-backend.js","components/QuestionCardDisplay.jsx","components/QuestionCard.jsx","components/TimeRemaining.jsx","components/AnswerButton.jsx","components/FinalRound.jsx","components/Results.jsx","components/GameRound.jsx","components/Game.jsx","App.jsx","index.js"],"names":["Landing","className","to","GameLanding","setRound","setUsername","useState","uname","setUname","onSubmit","e","preventDefault","type","required","value","onChange","currentTarget","tempData","QuestionCardDisplay","content","displayQuestion","isFlipped","startTimer","username","cardDisplayRef","useRef","answer","setAnswer","useEffect","contentComponent","document","querySelector","getBoundingClientRect","top","left","getComputedStyle","height","width","gsap","current","duration","then","open","userAnswer","opacity","delay","style","display","ref","correct","QuestionCard","question","score","setIsAnswerable","state","setDisplayQuestion","setIsFlipped","cardRef","onClick","answerable","locked","TimeRemaining","resetTimer","timer","maxTime","gameState","currTime","setCurrTime","isActive","setIsActive","currInterval","setCurrInterval","setInterval","clearInterval","timerBar","timerArr","i","push","buildTimerBar","map","isTime","idx","AnswerButton","addScore","toLowerCase","split","join","console","log","placeholder","icon","faChevronRight","size","FinalRound","wager","setWager","questionActive","setQuestionActive","userAnswerComponent","setUserAnswerComponent","maxWager","parseInt","min","max","Results","GameRound","dispatch","RESET_TIMER","START_TIMER","SET_ANSWERABLE","ADD_SCORE","questionBoardComponent","setQuestionBoardComponent","time","payload","round","baseScore","questions","slice","parseQuestions","number","scoreMultiplier","shuffle","categoryContainer","category","easy","medium","hard","Game","SET_ROUND","SET_DISPLAY_QUESTION","SET_USERNAME","useReducer","action","Object","freeze","nextState","assign","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"6LAsBeA,EAnBC,WAGd,OACE,0BAASC,UAAU,oBAAnB,UACE,oBAAIA,UAAU,iBAAd,uBACA,qBAAKA,UAAU,eAAf,6BAGA,cAAC,IAAD,CAAMA,UAAU,iBAAiBC,GAAG,cAApC,8B,cCoBSC,EA9BK,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAAkB,EACvBC,mBAAS,IADc,mBAC1CC,EAD0C,KACnCC,EADmC,KASjD,OACE,yBAASP,UAAU,yBAAnB,SACE,uBAAMQ,SARW,SAACC,GACpBA,EAAEC,iBACFP,EAAS,GACTC,EAAYE,IAKV,UACE,iDAEE,uBACEK,KAAK,OACLC,UAAQ,EACRC,MAAOP,EACPQ,SAAU,gBAAGC,EAAH,EAAGA,cAAH,OAAuBR,EAASQ,EAAcF,aAE5D,wBACEb,UAAU,cADZ,mCC0WOgB,EA/Xf,CACE,UACA,CACE,CACE,SAAY,UACZ,KAAQ,CACN,CACE,SAAY,+DACZ,OAAU,iBAEZ,CACE,SAAY,0DACZ,OAAU,iBAGd,OAAU,CACR,CACE,SAAY,qDACZ,OAAU,WAEZ,CACE,SAAY,gEACZ,OAAU,UAGd,KAAQ,CACN,CACE,SAAY,mDACZ,OAAU,YAIhB,CACE,SAAY,UACZ,KAAQ,CACN,CACE,SAAY,2BACZ,OAAU,QAEZ,CACE,SAAY,8CACZ,OAAU,SAGd,OAAU,CACR,CACE,SAAY,0DACZ,OAAU,QAEZ,CACE,SAAY,2CACZ,OAAU,SAGd,KAAQ,CACN,CACE,SAAY,2CACZ,OAAU,aAIhB,CACE,SAAY,aACZ,KAAQ,CACN,CACE,SAAY,wCACZ,OAAU,SAEZ,CACE,SAAY,oFACZ,OAAU,iBAGd,OAAU,CACR,CACE,SAAY,kHACZ,OAAU,eAEZ,CACE,SAAY,4DACZ,OAAU,MAGd,KAAQ,CACN,CACE,SAAY,qDACZ,OAAU,oBAIhB,CACE,SAAY,QACZ,KAAQ,CACN,CACE,SAAY,wDACZ,OAAU,QAEZ,CACE,SAAY,qFACZ,OAAU,WAGd,OAAU,CACR,CACE,SAAY,oIACZ,OAAU,QAEZ,CACE,SAAY,qEACZ,OAAU,aAGd,KAAQ,CACN,CACE,SAAY,6BACZ,OAAU,YAIhB,CACE,SAAY,YACZ,KAAQ,CACN,CACE,SAAY,0CACZ,OAAU,YAEZ,CACE,SAAY,+CACZ,OAAU,iBAGd,OAAU,CACR,CACE,SAAY,+EACZ,OAAU,aAEZ,CACE,SAAY,4CACZ,OAAU,gBAGd,KAAQ,CACN,CACE,SAAY,mGACZ,OAAU,sBAIhB,CACE,SAAY,UACZ,KAAQ,CACN,CACE,SAAY,+CACZ,OAAU,SAEZ,CACE,SAAY,sCACZ,OAAU,iBAGd,OAAU,CACR,CACE,SAAY,kEACZ,OAAU,gBAEZ,CACE,SAAY,yEACZ,OAAU,oBAGd,KAAQ,CACN,CACE,SAAY,mEACZ,OAAU,WAIhB,CACE,SAAY,aACZ,KAAQ,CACN,CACE,SAAY,+EACZ,OAAU,UAEZ,CACE,SAAY,iFACZ,OAAU,mBAGd,OAAU,CACR,CACE,SAAY,uDACZ,OAAU,kBAEZ,CACE,SAAY,gFACZ,OAAU,iBAGd,KAAQ,CACN,CACE,SAAY,8CACZ,OAAU,UAIhB,CACE,SAAY,SACZ,KAAQ,CACN,CACE,SAAY,0EACZ,OAAU,OAEZ,CACE,SAAY,mEACZ,OAAU,SAGd,OAAU,CACR,CACE,SAAY,mFACZ,OAAU,QAEZ,CACE,SAAY,wEACZ,OAAU,aAGd,KAAQ,CACN,CACE,SAAY,sEACZ,OAAU,eAIhB,CACE,SAAY,eACZ,KAAQ,CACN,CACE,SAAY,gEACZ,OAAU,WAEZ,CACE,SAAY,+DACZ,OAAU,YAGd,OAAU,CACR,CACE,SAAY,qEACZ,OAAU,WAEZ,CACE,SAAY,sCACZ,OAAU,kBAGd,KAAQ,CACN,CACE,SAAY,gEACZ,OAAU,cAIhB,CACE,SAAY,SACZ,KAAQ,CACN,CACE,SAAY,0FACZ,OAAU,aAEZ,CACE,SAAY,+FACZ,OAAU,oCAGd,OAAU,CACR,CACE,SAAY,oEACZ,OAAU,iBAEZ,CACE,SAAY,iFACZ,OAAU,mBAGd,KAAQ,CACN,CACE,SAAY,qEACZ,OAAU,oBAIhB,CACE,SAAY,UACZ,KAAQ,CACN,CACE,SAAY,mDACZ,OAAU,UAEZ,CACE,SAAY,6DACZ,OAAU,mBAGd,OAAU,CACR,CACE,SAAY,gEACZ,OAAU,UAEZ,CACE,SAAY,8DACZ,OAAU,iBAGd,KAAQ,CACN,CACE,SAAY,oFACZ,OAAU,gBAIhB,CACE,SAAY,OACZ,KAAQ,CACN,CACE,SAAY,sGACZ,OAAU,iBAEZ,CACE,SAAY,mGACZ,OAAU,qBAGd,OAAU,CACR,CACE,SAAY,kEACZ,OAAU,uBAEZ,CACE,SAAY,6FACZ,OAAU,oBAGd,KAAQ,CACN,CACE,SAAY,2EACZ,OAAU,+BAIhB,CACE,SAAY,IACZ,KAAQ,CACN,CACE,SAAY,gFACZ,OAAU,aAEZ,CACE,SAAY,8FACZ,OAAU,YAGd,OAAU,CACR,CACE,SAAY,+GACZ,OAAU,sBAEZ,CACE,SAAY,iFACZ,OAAU,YAGd,KAAQ,CACN,CACE,SAAY,6DACZ,OAAU,0B,gBChSLC,EAtFa,SAAC,GAMtB,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,WACAC,EACI,EADJA,SAEMC,EAAiBC,mBADnB,EAEwBnB,qBAFxB,mBAEGoB,EAFH,KAEWC,EAFX,KAwCJ,OApCAC,qBAAU,WACR,GAAIP,EAAW,CACb,IAAMQ,EAAmBC,SAASC,cAAc,oBADnC,EAESF,EAAiBG,wBAA/BC,EAFK,EAELA,IAAKC,EAFA,EAEAA,KAFA,EAGaC,iBAAiBN,GAAnCO,EAHK,EAGLA,OAAQC,EAHH,EAGGA,MAIhBC,IAAKpC,GAAGsB,EAAee,QAAS,CAC9BN,IAAI,GAAD,OAAKA,EAAM,GAAX,MACHC,KAAMA,EACNE,SACAC,QACAG,SAAU,IACTC,MAAK,WACNnB,EAAW,SAGd,CAACD,IAGJO,qBAAU,YACHR,EAAgBsB,MAAQrB,IAG3BM,EAAUP,EAAgBuB,YAE1BL,IAAKpC,GAAGsB,EAAee,QAAS,CAC9BK,QAAS,EACTJ,SAAU,IACTK,MAAM,GAAGJ,MACV,kBAAMjB,EAAee,QAAQO,MAAMC,QAAU,aAGhD,CAAC3B,EAAgBsB,KAAMrB,IAGxB,sBACEpB,UAAS,0EAGLoB,EAAY,UAAY,GAHnB,YAKT2B,IAAKxB,EANP,UAQE,qBAAKvB,UAAU,wBAAf,SACGkB,IAEH,sBACElB,UAAS,mDAGNmB,EAAgBsB,MAAQrB,GAAaK,EACtC,OAEA,GANO,cADX,UAWE,sBAAMzB,UAAU,SAAhB,SACIyB,IAEJ,sBAAKzB,UAAU,OAAf,eACMsB,KAEN,qBAAKtB,UAAS,sDAEVmB,EAAgB6B,QAAU,UAAY,QAF5B,gBAAd,SAII7B,EAAgB6B,QAAU,WAAa,sBCnBpCC,EA5DM,SAAC,GASf,IAKD/B,EAbJgC,EAQI,EARJA,SACAzB,EAOI,EAPJA,OACA0B,EAMI,EANJA,MACA9B,EAKI,EALJA,WACA+B,EAII,EAJJA,gBACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,mBACAhC,EACI,EADJA,SACI,EAC8BjB,oBAAS,GADvC,mBACGe,EADH,KACcmC,EADd,KAGEC,EAAUhC,mBAMdN,EAFEE,EAGA,qBAAKpB,UAAU,uBAAf,SACGkD,IAKH,sBAAKlD,UAAU,oBAAf,cACImD,KAcR,OACE,qCACE,qBACEnD,UAAS,wBAAmBoB,EAAY,UAAY,IACpDqC,QAbkB,YACjBrC,GAAaiC,EAAMK,WAAWC,SACjCJ,GAAa,GACbD,GAAmB,GAAM,EAAO,IAChCF,GAAgB,EAAO3B,EAAQ0B,KAU7BJ,IAAKS,EAHP,SAKGtC,IAEH,cAAC,EAAD,CACEA,QAASA,EACTC,gBAAiBkC,EAAMlC,gBACvBC,UAAWA,EACXC,WAAYA,EACZC,SAAUA,QCKHsC,EA5DO,SAAC,GAOhB,IANLC,EAMI,EANJA,WACAC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAX,EAGI,EAHJA,gBACAE,EAEI,EAFJA,mBACAU,EACI,EADJA,UACI,EAC4B3D,qBAD5B,mBACG4D,EADH,KACaC,EADb,OAE4B7D,oBAAS,GAFrC,mBAEG8D,EAFH,KAEaC,EAFb,OAGoC/D,qBAHpC,mBAGGgE,EAHH,KAGiBC,EAHjB,KAKJ3C,qBAAU,YACHwC,GAAYL,EAAMzC,YACrB6C,EAAYJ,EAAMG,UAClBG,GAAY,GACZE,EAAgBC,aAAY,WAC1BL,GAAY,SAAAD,GAAQ,OAAIA,EAAW,OAClC,QACME,GAA0B,IAAbF,GAAmBH,EAAMzC,aAC/C6C,EAAY,GACZd,GAAgB,EAAM,GAAI,GAC1BgB,GAAY,GACRJ,EAAU7C,gBAAgBsB,OAASuB,EAAU7C,gBAAgB6B,SAC/DM,GAAmB,GAAO,EAAO,IAEnCkB,cAAcH,GACdR,OAED,CAACI,EAAUE,EAAUE,EAAcP,EAAOD,IAG7C,IAQMY,EACJ,qBAAKzE,UAAU,kBAAf,SAToB,SAAC+D,GAErB,IADA,IAAIW,EAAW,GACNC,EAAI,EAAGA,GAAKZ,EAASY,IAC5BD,EAASE,KAAKD,GAAKV,GAErB,OAAOS,EAKJG,CAAcd,GAASe,KAAI,SAACC,EAAQC,GAAT,OAC1B,qBACEhF,UAAS,sBAAiB+E,EAAS,SAAW,KADhD,gBAEgBC,SAOtB,OACE,sBAAKhF,UAAU,2BAAf,UACImE,EAAQ,0BAAsBF,GAAY,GAC3CQ,M,gBCDQQ,EApDM,SAAC,GAMf,IALL5B,EAKI,EALJA,MACAD,EAII,EAJJA,gBACA8B,EAGI,EAHJA,SACArB,EAEI,EAFJA,WACAP,EACI,EADJA,mBACI,EACwBjD,mBAAS,IADjC,mBACGoB,EADH,KACWC,EADX,KA2BJ,OACE,qBAAK1B,UAAU,0BAAf,SACE,sBAAMQ,SA1BiB,SAACC,IAC1BA,EAAEC,iBACG2C,EAAMK,WAAWC,UAGlBlC,EAAO0D,cAAcC,MAAM,KAAKC,KAAK,MAAQhC,EAAMK,WAAWjC,OAAO0D,cAAcC,MAAM,KAAKC,KAAK,KAInGH,EAAS7B,EAAMK,WAAWP,OAC1BG,GAAmB,GAAO,EAAM7B,GAChC6D,QAAQC,IAAI,QAASlC,EAAMK,WAAWP,SAGtC+B,GAAU,EAAI7B,EAAMK,WAAWP,OAC/BG,GAAmB,GAAO,EAAO7B,GACjC6D,QAAQC,IAAI,UAEd7D,EAAU,IACV0B,GAAgB,EAAM,GAAI,GAC1BS,MAMA,SACE,sBAAK7D,UAAU,kBAAf,UACE,uBACEW,KAAK,OACL6E,YAAY,YACZ3E,MAAOY,EACPX,SAAU,SAACL,GAAD,OAAOiB,EAAUjB,EAAEM,cAAcF,UAE7C,wBAAQF,KAAK,SAASX,UAAU,gBAAhC,SACE,cAAC,IAAD,CAAiByF,KAAMC,IAAgBC,KAAK,iBCqEzCC,EAnHI,SAAC,GAOb,IA4DD1E,EAlEJiC,EAMI,EANJA,MACAG,EAKI,EALJA,mBACAF,EAII,EAJJA,gBACA/B,EAGI,EAHJA,WACAgC,EAEI,EAFJA,MAEI,KADJlD,SAQ0BE,mBAAS,IAP/B,mBAOGwF,EAPH,KAOUC,EAPV,OAQwCzF,oBAAS,GARjD,mBAQG0F,EARH,KAQmBC,EARnB,OASkD3F,qBATlD,mBASG4F,EATH,KASwBC,EATxB,KAWEC,EAAWhD,EAAQ,EAAIiD,SAASjD,GAAS,IAmF/C,OAtEAxB,qBAAU,YAEH0B,EAAMW,UAAU7C,gBAAgBsB,MAAQY,EAAMW,UAAU7C,gBAAgBuB,YAC3EwD,EACE,sBACElG,UAAS,uDAGNqD,EAAMW,UAAU7C,gBAAgBsB,MAAQY,EAAMW,UAAU7C,gBAAgBuB,WACzE,OAEA,GANO,gBADX,UAWE,sBAAM1C,UAAU,SAAhB,SACIqD,EAAMW,UAAU7C,gBAAgBuB,aAEpC,sBAAK1C,UAAU,OAAf,eACMqD,EAAM/B,YAEZ,qBAAKtB,UAAS,0DAEVqD,EAAMW,UAAU7C,gBAAgB6B,QAAU,UAAY,QAF5C,kBAAd,SAIIK,EAAMW,UAAU7C,gBAAgB6B,QAAU,WAAa,qBAShE,CAACK,IAKFnC,EADE6E,EAEA,sBAAK/F,UAAU,oBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wCAAW6F,EAAX,QA9DS,oCAiEVI,KAIH,uBAAMzF,SA5DgB,SAACC,GACzBA,EAAEC,iBAEFsF,GAAkB,GAGlB1C,GAAmB,GAAM,EAAO,IAChCF,GAAgB,EAfH,OAekBgD,SAASP,IACxCxE,EAAW,IAoDT,UACE,uBACEV,KAAK,SACLE,MAAOgF,EACPQ,IAAI,IACJC,IAAKH,EACLrF,SAAU,gBAAEC,EAAF,EAAEA,cAAF,OAAqB+E,EAAS/E,EAAcF,UAExD,uBACEF,KAAK,QACLE,MAAOgF,EACPQ,IAAI,IACJC,IAAKH,EACLrF,SAAU,gBAAEC,EAAF,EAAEA,cAAF,OAAqB+E,EAAS/E,EAAcF,UAExD,wBAAQb,UAAU,SAAlB,0BAOJ,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAS,qBAAgB+F,EAAiB,GAAK,QAApD,UACE,8CACA,8CAAiBI,EAAjB,IAA4BhD,GAAS,EAAI,YAAc,GAAvD,yCAEF,6BAlGW,YAmGTjC,QClGKqF,EAXC,SAAC,GAAyB,IAAvBjF,EAAsB,EAAtBA,SAAU6B,EAAY,EAAZA,MAC3B,OACE,sBAAKnD,UAAU,oBAAf,UACE,+BAAQsB,IACR,+BAAQ6B,IAER,kDCyKSqD,EAxKG,SAAC,GASZ,IARLnD,EAQI,EARJA,MACAoD,EAOI,EAPJA,SACAC,EAMI,EANJA,YACAC,EAKI,EALJA,YACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,UACA1G,EAEI,EAFJA,SACAmD,EACI,EADJA,mBACI,EACwDjD,qBADxD,mBACGyG,EADH,KAC2BC,EAD3B,KAOElD,EAAa,kBAAM4C,EAAS,CAChC9F,KAAM+F,KAGFrF,EAAa,SAAC2F,GAAD,OAAUP,EAAS,CACpC9F,KAAMgG,EACNM,QAAS,CACPD,OACA/C,SAAU,EACV5C,YAAY,MAIV+B,EAAkB,SAACO,EAAQlC,EAAQ0B,GAAjB,OAA2BsD,EAAS,CAC1D9F,KAAMiG,EACNK,QAAS,CACPtD,SACAlC,SACA0B,YASE+D,EAAQd,SAAS/C,EAAMW,UAAUkD,OACjCC,EAAY,IAAMD,EAkExB,OAhEAvF,qBAAU,WACR,GAAc,IAAVuF,GAAyB,IAAVA,EAAa,CAC9B,IAAME,EAAYpG,EAASoG,UAAUC,MAAM,EAAG,GAExCC,EAAiB,SAACF,EAAWG,EAAQC,GAApB,OACrBC,kBAAQL,GAAWC,MAAM,EAAGE,GAAQzC,KAAI,WAAuBE,GAAvB,IAAG9B,EAAH,EAAGA,SAAUzB,EAAb,EAAaA,OAAb,OACtC,oBAAIzB,UAAU,OAAd,SACE,cAAC,EAAD,CACEkD,SAAUA,EACVzB,OAAQA,EACR0B,MAAOqE,EAAkBL,EAAYA,EAAYnC,EACjD3D,WAAYA,EACZ+B,gBAAiBA,EACjBC,MAAOA,EAAMW,UACbV,mBAAoBA,EACpBhC,SAAU+B,EAAM/B,YATpB,UAA6B4F,EAA7B,iBAA2ClC,QAezC0C,EAAoBN,EAAUtC,KAAI,WAAkCE,GAAlC,IAAG2C,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,KAA3B,OACtC,qBAAI9H,UAAU,qBAAd,UACE,oBAAIA,UAAU,kBAAd,SAAiC2H,IAChCL,EAAeM,EAAM,EAAG,GACxBN,EAAeO,EAAQ,EAAG,GAC1BP,EAAeQ,EAAM,EAAG,KAJ3B,mBAAoD9C,OAQtD+B,EACE,yBAAS/G,UAAU,2BAAnB,SACE,qBAAKA,UAAU,kBAAf,SACG0H,YAMPX,EAFmB,IAAVG,EAGP,yBAASlH,UAAU,uBAAnB,SACE,cAAC,EAAD,CACEmD,MAAOE,EAAMF,MACb9B,WAAYA,EACZ+B,gBAAiBA,EACjBE,mBAAoBA,EACpBD,MAAOA,EACP/B,SAAU+B,EAAM/B,SAChBnB,SAAUA,MAOd,yBAASH,UAAU,yBAAnB,SACE,cAAC,EAAD,CAASsB,SAAU+B,EAAM/B,SAAU6B,MAAOE,EAAMF,aAMrD,CAAC+D,EAAO7D,EAAMW,UAAU7C,gBAAiBkC,EAAM/B,WAGhD,0BAAStB,UAAU,uBAAnB,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SAEGqD,EAAMW,UAAU7C,gBAAgBsB,KAC/B,yBAEA,sBAGJ,sBAAKzC,UAAU,aAAf,UACE,qBAAKA,UAAU,QAAf,SACE,0CACWqD,EAAMF,WAGnB,qBAAKnD,UAAU,gBAAf,SACE,wCACSkH,aAKf,wBACElH,UAAU,MACVyD,QAAS,kBAAMtD,EAASkD,EAAMW,UAAUkD,MAAQ,IAFlD,iCAQF,qBAAKlH,UAAU,UAAf,SACG8G,IAGH,sBAAK9G,UAAU,aAAf,UACE,cAAC,EAAD,CACE6D,WAAYA,EACZC,MAAOT,EAAMS,MACbC,QAAS,EACTX,gBAAiBA,EACjBE,mBAAoBA,EACpBU,UAAWX,EAAMW,YAEnB,cAAC,EAAD,CACEX,MAAOA,EAAMW,UACbZ,gBAAiBA,EACjB8B,SAzHS,SAAC/B,GAAD,OAAWsD,EAAS,CACnC9F,KAAMkG,EACNI,QAAS9D,KAwHHU,WAAYA,EACZP,mBAAoBA,WCzCfyE,EA7HF,WACX,IAAMrB,EAAc,aACdC,EAAc,aACdC,EAAiB,gBACjBC,EAAY,WACZmB,EAAY,WACZC,EAAuB,qBACvBC,EAAe,cAPJ,EAiFSC,sBAtEV,SAAC9E,EAAO+E,GACtBC,OAAOC,OAAOjF,GAEd,IAAIkF,EAAYF,OAAOG,OAAO,GAAInF,GAElC,OAAO+E,EAAOzH,MACZ,KAAK+F,EAMH,OALA6B,EAAUzE,MAAQ,CAChBkD,KAAM,EACN/C,SAAU,EACV5C,YAAY,GAEPkH,EACT,KAAK5B,EAGH,OAFA4B,EAAUzE,MAAQsE,EAAOnB,QACzBsB,EAAUzE,MAAMG,SAAWsE,EAAUzE,MAAMkD,KACpCuB,EACT,KAAK3B,EAEH,OADA2B,EAAUvE,UAAUN,WAAa0E,EAAOnB,QACjCsB,EACT,KAAK1B,EAEH,OADA0B,EAAUpF,MAAQoF,EAAUpF,MAAQiF,EAAOnB,QACpCsB,EACT,KAAKP,EAQH,OAPAO,EAAUvE,UAAUkD,MAAQkB,EAAOnB,QAEnCsB,EAAUpH,gBAAkB,CAC1BsB,MAAM,EACNO,SAAS,EACTN,WAAY,IAEP6F,EACT,KAAKN,EAEH,OADAM,EAAUvE,UAAU7C,gBAAkBiH,EAAOnB,QACtCsB,EACT,KAAKL,EAEH,OADAK,EAAUjH,SAAW8G,EAAOnB,QACrBsB,EACT,QACE,OAAOA,KAKQ,CACnBjH,SAAU,GACV6B,MAAO,EACPW,MAAO,CACLkD,KAAM,EACN/C,SAAU,EACV5C,YAAY,GAEd2C,UAAW,CACTN,WAAY,CACVC,QAAQ,EACRlC,OAAQ,GACR0B,MAAO,GAET+D,MAAO,EACP/F,gBAAiB,CACfsB,MAAM,EACNO,SAAS,EACTN,WAAY,OAzED,mBAiFVW,EAjFU,KAiFHoD,EAjFG,KAmFXtG,EAAW,SAAC+G,GAAD,OAAWT,EAAS,CACnC9F,KAAMqH,EACNf,QAASC,KAiBX,OACE,yBAASlH,UAAU,iBAAnB,SAC6B,IAA1BqD,EAAMW,UAAUkD,MACf,cAAC,EAAD,CACE/G,SAAUA,EACVC,YAVY,SAACkB,GAAD,OAAcmF,EAAS,CACzC9F,KAAMuH,EACNjB,QAAS3F,OAWL,cAAC,EAAD,CACE+B,MAAOA,EACPoD,SAAUA,EACVC,YAAaA,EACbC,YAAaA,EACbC,eAAgBA,EAChBC,UAAWA,EACX1G,SAAUA,EACVmD,mBA9BmB,SAACb,EAAMO,EAASN,GAAhB,OAA+B+D,EAAS,CACjE9F,KAAMsH,EACNhB,QAAS,CACPxE,OACAO,UACAN,sBC5ES+F,MAjBf,WACE,OACE,qBAAKzI,UAAU,gBAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0I,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCRZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhH,SAASiH,eAAe,W","file":"static/js/main.83204e45.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Landing = () => {\n  // TODO: Use websockets and roomid\n  \n  return (\n    <section className=\"landing-container\">\n      <h1 className=\"landing-header\">Jeopardee</h1>\n      <div className=\"under-header\">\n        RIP Alex Trebek\n      </div>\n      <Link className=\"landing-button\" to=\"/room/69420\">\n        Start a game\n      </Link>\n      {/* <Link className=\"landing-button\" to=\"/\">\n        Join a game\n      </Link> */}\n    </section>\n  )\n}\n\nexport default Landing;\n","import React, { useState } from 'react';\n\nconst GameLanding = ({ setRound, setUsername }) => {\n  const [uname, setUname] = useState(''); \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setRound(1);\n    setUsername(uname);\n  }\n\n  return (\n    <section className=\"game-landing-container\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          Display Name\n          <input\n            type=\"text\"\n            required\n            value={uname}\n            onChange={({ currentTarget }) => setUname(currentTarget.value)}/>\n        </label>\n        <button\n          className=\"game-button\"\n        >\n          Start the game!\n        </button>\n      </form>\n    </section>\n  )\n}\n\nexport default GameLanding;\n","const tempData = \n{\n  \"questions\": \n  [\n    {\n      \"category\": \"Heights\",\n      \"easy\": [\n        {\n          \"question\": \"Which mountain is the highest point on Earth from sea level?\",\n          \"answer\": \"Mount Everest\"\n        },\n        {\n          \"question\": \"What is the tallest building in the world (as of 2020)?\",\n          \"answer\": \"Burj Khalifa\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"How tall is a penny standing on it's edge (in in.)\",\n          \"answer\": \"0.75 in\"\n        },\n        {\n          \"question\": \"How tall is the NBA regulation basketball rim height (in ft) \",\n          \"answer\": \"10 ft\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"What height (in km) is the Kármán Line at?\",\n          \"answer\": \"100 km\"\n        }\n      ]\n    },\n    {\n      \"category\": \"History\",\n      \"easy\": [\n        {\n          \"question\": \"What year did WWI begin?\",\n          \"answer\": \"1914\"\n        },\n        {\n          \"question\": \"What year did the first moon landing occur?\",\n          \"answer\": \"1969\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"What year was the first FIFA World Cup tournament held?\",\n          \"answer\": \"1930\"\n        },\n        {\n          \"question\": \"What year did Pan Am go out of business?\",\n          \"answer\": \"1991\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"How long (in days) did the Emu War last?\",\n          \"answer\": \"39 days\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Literature\",\n      \"easy\": [\n        {\n          \"question\": \"Who was the author of the poem Iliad?\",\n          \"answer\": \"Homer\"\n        },\n        {\n          \"question\": \"What is the name of the protagonist in Joanne Rowling's most notable book series?\",\n          \"answer\": \"Harry Potter\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"Which Japanese theoretical physicist is well known for his one of his bestsellers, 'Physics of the Impossible'?\",\n          \"answer\": \"Michio Kaku\"\n        },\n        {\n          \"question\": \"How many circles of hell is traversed in Inferno (Dante)?\",\n          \"answer\": \"9\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"Who was the author of the play, 'Of Mice and Men'?\",\n          \"answer\": \"John Steinbeck\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Games\",\n      \"easy\": [\n        {\n          \"question\": \"What is commonly referred to as the first video game?\",\n          \"answer\": \"Pong\"\n        },\n        {\n          \"question\": \"What is the name of a tile matching game that contains a move known as a 'T-spin'?\",\n          \"answer\": \"Tetris\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"What is the name of the franchise based on military science fiction, with an intersetellar war between humanity and the Covenant?\",\n          \"answer\": \"Halo\"\n        },\n        {\n          \"question\": \"What type of weapon does Squall wield in the Final Fantasy series?\",\n          \"answer\": \"Gunblade\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"How tall is Mario (in cm)?\",\n          \"answer\": \"155 cm\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Geography\",\n      \"easy\": [\n        {\n          \"question\": \"Where is the capital city of Australia?\",\n          \"answer\": \"Canberra\"\n        },\n        {\n          \"question\": \"What is the name of the city-state in Italy?\",\n          \"answer\": \"Vatican City\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"What is the region bounded by Hawaii, New Zealand, and Easter Island called?\",\n          \"answer\": \"Polynesia\"\n        },\n        {\n          \"question\": \"Where does the Haka dance originate from?\",\n          \"answer\": \"New Zealand\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"What is the name of the cold current that flows North, along the western coast of South America?\",\n          \"answer\": \"Humboldt Current\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Science\",\n      \"easy\": [\n        {\n          \"question\": \"What is a saccharide more commonly known as?\",\n          \"answer\": \"Sugar\"\n        },\n        {\n          \"question\": \"What is the powerhouse of the cell?\",\n          \"answer\": \"Mitochondria\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"What is the term used to describe smooth or regular fluid flow?\",\n          \"answer\": \"Laminar Flow\"\n        },\n        {\n          \"question\": \"What is the random motion of particles suspended in a medium known as?\",\n          \"answer\": \"Brownian Motion\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"What is the name of the subatomic particle that make up hadrons?\",\n          \"answer\": \"Quark\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Technology\",\n      \"easy\": [\n        {\n          \"question\": \"What is the name of the counting tool used in ancient times as a calculator?\",\n          \"answer\": \"Abacus\"\n        },\n        {\n          \"question\": \"What is the name of the machine used by Nazi Germany to encrypt communication?\",\n          \"answer\": \"Enigma machine\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"What is the name of the creator of the Linux kernel?\",\n          \"answer\": \"Linus Torvalds\"\n        },\n        {\n          \"question\": \"What is the name of the computer produced by a company with a raspberry logo?\",\n          \"answer\": \"Raspberry Pi\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"The first macOS released during which year?\",\n          \"answer\": \"2001\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Weight\",\n      \"easy\": [\n        {\n          \"question\": \"How many pounds (lbs) are there to 1 kilogram (kg), to 1 decimal point?\",\n          \"answer\": \"2.2\"\n        },\n        {\n          \"question\": \"Roughly how much does 1 liter of water weigh, in kilograms (kg)?\",\n          \"answer\": \"1 kg\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"1 kilogram (kg) of feathers weighs the same as how many kilograms (kg) of metal?\",\n          \"answer\": \"1 kg\"\n        },\n        {\n          \"question\": \"What is the average weight of a car in 2018, to the nearest 1000 lbs?\",\n          \"answer\": \"4000 lbs\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"What is the weight limit (in lbs) of intermodal freight containers?\",\n          \"answer\": \"42500 lbs\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Social Media\",\n      \"easy\": [\n        {\n          \"question\": \"What is the name of Google's social network launched in 2011?\",\n          \"answer\": \"Google+\"\n        },\n        {\n          \"question\": \"Tom Anderson founded this social networking service in 2003.\",\n          \"answer\": \"MySpace\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"What social networking service refers to user's posts as 'tweets'?\",\n          \"answer\": \"Twitter\"\n        },\n        {\n          \"question\": \"Which city was LinkedIn founded in?\",\n          \"answer\": \"Mountain View\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"What app did Facebook acquire in 2014 for 19 billion dollars?\",\n          \"answer\": \"WhatsApp\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Movies\",\n      \"easy\": [\n        {\n          \"question\": \"What is the name of the 2010 science fiction action film directed by Christopher Nolan?\",\n          \"answer\": \"Inception\"\n        },\n        {\n          \"question\": \"What is the full name of the movie in which an infamous Killer Rabbit of Caerbannog appears?\",\n          \"answer\": \"Monty Python and the Holy Grail\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"Hello. My name is ________. You killed my father. Prepare to die.\",\n          \"answer\": \"Inigo Montoya\"\n        },\n        {\n          \"question\": \"What is the full name of the character Jim Carrey played in 'The Truman Show'?\",\n          \"answer\": \"Truman Burbank\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"What is Mrs. Doubtfire's real name in the movie, 'Mrs. Doubtfire'?\",\n          \"answer\": \"Daniel Hillard\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Statues\",\n      \"easy\": [\n        {\n          \"question\": \"What color was the Statue of Liberty originally?\",\n          \"answer\": \"Copper\"\n        },\n        {\n          \"question\": \"What city is the statue, 'Christ the Redeemer' located in?\",\n          \"answer\": \"Rio De Janeiro\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"What is the animal depicted by this statue near the Pyramids?\",\n          \"answer\": \"Sphinx\"\n        },\n        {\n          \"question\": \"Who sculpted the masterpiece, 'David', out of white marble?\",\n          \"answer\": \"Michelangelo\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"What is the well known army of buried clay soldiers in Xi'an, China, made out of?\",\n          \"answer\": \"Terracotta\"\n        }\n      ]\n    },\n    {\n      \"category\": \"Duos\",\n      \"easy\": [\n        {\n          \"question\": \"What are the names of the cat and mouse duo in their iconic cartoon series, named after themselves?\",\n          \"answer\": \"Tom and Jerry\"\n        },\n        {\n          \"question\": \"What are the names of the superhero and sidekick duo that have names alluding to flying animals?\",\n          \"answer\": \"Batman and Robin\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"What is the folk rock duo that released 'The Sound of Silence'?\",\n          \"answer\": \"Simon and Garfunkel\"\n        },\n        {\n          \"question\": \"What are the first names of the Weasley twins in the Harry Potter series (alphabetically)?\",\n          \"answer\": \"Fred and George\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"What are the names of the iconic duo of the 'Back to the Future' series?\",\n          \"answer\": \"Marty McFly and Doc Brown\"\n        }\n      ]\n    },\n    {\n      \"category\": \"S\",\n      \"easy\": [\n        {\n          \"question\": \"What is the name of a watercraft capable of independent operation underwater?\",\n          \"answer\": \"Submarine\"\n        },\n        {\n          \"question\": \"Which word refers to words or phrases that mean exactly or nearly the same as another word?\",\n          \"answer\": \"Synonym\"\n        }\n      ],\n      \"medium\": [\n        {\n          \"question\": \"What is the name of the famous song by Led Zeppelin, released in 1971, with a length of just over 8 minutes?\",\n          \"answer\": \"Stairway to Heaven\"\n        },\n        {\n          \"question\": \"What is the term used to describe the use of irony to mock or convey contempt?\",\n          \"answer\": \"Sarcasm\"\n        }\n      ],\n      \"hard\": [\n        {\n          \"question\": \"Who played Robert 'Rocky' Balboa in the 1976 film 'Rocky'?\",\n          \"answer\": \"Sylvester Stallone\"\n        }\n      ]\n    },\n  ]\n};\n\nexport default tempData;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\n\nconst QuestionCardDisplay = ({\n  content,\n  displayQuestion,\n  isFlipped,\n  startTimer,\n  username\n}) => {\n  const cardDisplayRef = useRef();\n  const [answer, setAnswer] = useState();\n  \n  useEffect(() => {\n    if (isFlipped) {\n      const contentComponent = document.querySelector(\".content-wrapper\");\n      const { top, left } = contentComponent.getBoundingClientRect();\n      const { height, width } = getComputedStyle(contentComponent);\n      // TODO: idk why it's off by one grid\n      // TODO: easing formula seems to not be working\n      // probably due to css transitions or something\n      gsap.to(cardDisplayRef.current, {\n        top: `${top + 75}px`,\n        left: left,\n        height,\n        width,\n        duration: 1\n      }).then(() => {\n        startTimer(5);\n      })\n    }\n  }, [isFlipped]);\n\n  // When card is about to be flipped back over\n  useEffect(() => {\n    if (!displayQuestion.open && isFlipped) {\n      // Do not display correct answer if wrong\n      // TODO: Handle continued guessing for MP\n      setAnswer(displayQuestion.userAnswer);\n  \n      gsap.to(cardDisplayRef.current, {\n        opacity: 0,\n        duration: 1\n      }).delay(3).then(\n        () => cardDisplayRef.current.style.display = \"none\"\n      );\n    };\n  }, [displayQuestion.open, isFlipped])\n\n  return (\n    <div\n      className={`\n        question-card-display\n        question-card\n        ${isFlipped ? 'flipped' : ''}\n      `}\n      ref={cardDisplayRef}\n    >\n      <div className=\"question-card-content\">\n        {content}\n      </div>\n      <div\n        className={`\n        question-card-answer\n        ${\n          !displayQuestion.open && isFlipped && answer ?\n          'show'\n          :\n          ''\n        }\n        `}\n      >\n        <span className=\"answer\">\n          { answer }\n        </span>\n        <div className=\"user\">\n          - { username }\n        </div>\n        <div className={`\n          correct-or-incorrect\n          ${displayQuestion.correct ? 'correct' : 'wrong'}\n          `}>\n          { displayQuestion.correct ? 'Correct!' : 'Incorrect!' }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default QuestionCardDisplay;\n","import React, { useEffect, useRef, useState } from 'react';\nimport QuestionCardDisplay from './QuestionCardDisplay';\n\nconst QuestionCard = ({\n  question,\n  answer,\n  score,\n  startTimer,\n  setIsAnswerable,\n  state,\n  setDisplayQuestion,\n  username\n}) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const cardRef = useRef();\n\n  let content;\n\n  if (isFlipped) {\n    // TODO: Handle question too long\n    content = (\n      <div className=\"card-question detail\">\n        {question}\n      </div>\n    )\n  } else {\n    content = (\n      <div className=\"card-score detail\">\n        ${score}\n      </div>\n    )\n  }\n\n  const handleCardClick = () => {\n    if (!isFlipped && state.answerable.locked) {\n      setIsFlipped(true);\n      setDisplayQuestion(true, false, '');\n      setIsAnswerable(false, answer, score);\n      // startTimer(5);\n    }\n  }\n\n  return (\n    <>\n      <div\n        className={`question-card ${isFlipped ? 'flipped' : ''}`}\n        onClick={handleCardClick}\n        ref={cardRef}\n      >\n        {content}\n      </div>\n      <QuestionCardDisplay\n        content={content}\n        displayQuestion={state.displayQuestion}\n        isFlipped={isFlipped}\n        startTimer={startTimer}\n        username={username}\n      />\n    </>\n  )\n}\n\nexport default QuestionCard;\n","import React, { useEffect, useState } from 'react';\n\nconst TimeRemaining = ({\n  resetTimer,\n  timer,\n  maxTime,\n  setIsAnswerable,\n  setDisplayQuestion,\n  gameState\n}) => {\n  const [currTime, setCurrTime] = useState();\n  const [isActive, setIsActive] = useState(false);\n  const [currInterval, setCurrInterval] = useState();\n\n  useEffect(() => {\n    if (!isActive && timer.startTimer) {\n      setCurrTime(timer.currTime);\n      setIsActive(true);\n      setCurrInterval(setInterval(() => {\n        setCurrTime(currTime => currTime - 1);\n      }, 1000));\n    } else if (isActive && (currTime === 0 || !timer.startTimer)) {\n      setCurrTime(0);\n      setIsAnswerable(true, \"\", 0);\n      setIsActive(false);\n      if (gameState.displayQuestion.open && !gameState.displayQuestion.correct) {\n        setDisplayQuestion(false, false, '');\n      }\n      clearInterval(currInterval);\n      resetTimer();\n    }\n  }, [currTime, isActive, currInterval, timer, resetTimer]);\n\n  \n  const buildTimerBar = (maxTime) => {\n    let timerArr = [];\n    for (let i = 1; i <= maxTime; i++) {\n      timerArr.push(i <= currTime);\n    }\n    return timerArr;\n  }\n\n  const timerBar = (\n    <div className=\"timer-container\">\n      {buildTimerBar(maxTime).map((isTime, idx) => (\n        <div\n          className={`timer-piece ${isTime ? 'active' : ''}`}\n          key={`timer-${idx}`}\n        >\n        </div>\n      ))}\n    </div>\n  )\n  \n  return (\n    <div className=\"time-remaining-container\">\n      { isActive ? `Time Remaining: ${currTime}`: ''}\n      {timerBar}\n    </div>\n  )\n}\n\nexport default TimeRemaining;\n","import { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState } from 'react';\n\nconst AnswerButton = ({\n  state,\n  setIsAnswerable,\n  addScore,\n  resetTimer,\n  setDisplayQuestion\n}) => {\n  const [answer, setAnswer] = useState(\"\");\n\n  const handleAnswerSubmit = (e) => {\n    e.preventDefault();\n    if (!state.answerable.locked) {\n      // TODO: Temp solution\n      const isAnswerEquivalent = \n        answer.toLowerCase().split(' ').join('') === state.answerable.answer.toLowerCase().split(' ').join('');\n\n      if (isAnswerEquivalent) {\n        // Add score\n        addScore(state.answerable.score)\n        setDisplayQuestion(false, true, answer);\n        console.log(\"YAY: \", state.answerable.score);\n      } else {\n        // Minus score\n        addScore(-1 * state.answerable.score)\n        setDisplayQuestion(false, false, answer);\n        console.log(\"wrong\");\n      }\n      setAnswer(\"\");\n      setIsAnswerable(true, \"\", 0);\n      resetTimer();\n    };\n  };\n\n  return (\n    <div className=\"answer-button-container\">\n      <form onSubmit={handleAnswerSubmit}>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Answer...\"\n            value={answer}\n            onChange={(e) => setAnswer(e.currentTarget.value)}\n          />\n          <button type=\"submit\" className=\"answer-button\">\n            <FontAwesomeIcon icon={faChevronRight} size=\"lg\" />\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default AnswerButton;\n","import React, { useEffect, useState } from 'react';\n\nconst FinalRound = ({\n  score,\n  setDisplayQuestion,\n  setIsAnswerable,\n  startTimer,\n  state,\n  setRound\n}) => {\n  // TODO: Let's everyone do the last round\n  // TODO: temp\n  const category = \"Youtube\";\n  const question = \"What year was youtube founded?\";\n  const answer = \"2005\";\n\n  const [wager, setWager] = useState(0);\n  const [questionActive, setQuestionActive] = useState(false);\n  const [userAnswerComponent, setUserAnswerComponent] = useState();\n\n  const maxWager = score > 0 ? parseInt(score) : 2000;\n\n  const handleSubmitWager = (e) => {\n    e.preventDefault();\n\n    setQuestionActive(true);\n\n    // TODO: Delay?\n    setDisplayQuestion(true, false, '');\n    setIsAnswerable(false, answer, parseInt(wager));\n    startTimer(5);\n  }\n\n  useEffect(() => {\n    // TODO: does not display incorrect answer\n    if (!state.gameState.displayQuestion.open && state.gameState.displayQuestion.userAnswer) {\n      setUserAnswerComponent(\n        <div\n          className={`\n          question-card-answer\n          ${\n            !state.gameState.displayQuestion.open && state.gameState.displayQuestion.userAnswer ?\n            'show'\n            :\n            ''\n          }\n          `}\n        >\n          <span className=\"answer\">\n            { state.gameState.displayQuestion.userAnswer }\n          </span>\n          <div className=\"user\">\n            - { state.username }\n          </div>\n          <div className={`\n            correct-or-incorrect\n            ${state.gameState.displayQuestion.correct ? 'correct' : 'wrong'}\n            `}>\n            { state.gameState.displayQuestion.correct ? 'Correct!' : 'Incorrect!' }\n          </div>\n        </div>\n      )\n      // TODO: Also when fail to answer\n      // setTimeout(() => {\n      //   setRound(4);\n      // }, 3000);\n    }\n  }, [state])\n\n  let content;\n\n  if (questionActive) {\n    content = \n      <div className=\"content-container\">\n        <div className=\"question-container\">\n          <div>For ${wager}: </div>\n          {question}\n        </div>\n        {userAnswerComponent}\n      </div>\n  } else {\n    content = \n      <form onSubmit={handleSubmitWager}>\n        <input\n          type=\"number\"\n          value={wager}\n          min=\"0\"\n          max={maxWager}\n          onChange={({currentTarget}) => setWager(currentTarget.value)}\n        />\n        <input\n          type=\"range\"\n          value={wager}\n          min=\"0\"\n          max={maxWager}\n          onChange={({currentTarget}) => setWager(currentTarget.value)}\n        />\n        <button className=\"button\">\n          Set Wager\n        </button>\n      </form>\n  }\n\n  return (\n    <div className=\"final-round-container\">\n      <div className=\"final-round-wrapper\">\n        <div className={`first-part ${questionActive ? '' : 'show'}`}>\n          <h4>Final Round!</h4>\n          <p>Wager up to ${maxWager} {score >= 0 ? '(in debt)' : ''} for this final question about: </p>\n        </div>\n        <h4>{ category }</h4>\n        { content }\n      </div>\n    </div>\n  )\n}\n\nexport default FinalRound;\n","import React from 'react';\n\nconst Results = ({ username, score }) => {\n  return (\n    <div className=\"results-container\">\n      <span>{ username }</span>\n      <span>{ score }</span>\n      {/* TODO: This lol */}\n      <button>New Game</button>\n    </div>\n  )\n}\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport tempData from '../temp-backend';\nimport { shuffle } from 'lodash';\nimport QuestionCard from './QuestionCard';\nimport TimeRemaining from './TimeRemaining';\nimport AnswerButton from './AnswerButton';\nimport FinalRound from './FinalRound';\nimport Results from './Results';\n\nconst GameRound = ({\n  state,\n  dispatch,\n  RESET_TIMER,\n  START_TIMER,\n  SET_ANSWERABLE,\n  ADD_SCORE,\n  setRound,\n  setDisplayQuestion\n}) => {\n  const [questionBoardComponent, setQuestionBoardComponent] = useState();\n\n  // TODO: Track used questions to not repeat for round 2\n  // or just integrate it part of api\n\n  // TODO: Round 4 = results, and offer option to reset to round 0\n  const resetTimer = () => dispatch({\n    type: RESET_TIMER\n  });\n\n  const startTimer = (time) => dispatch({\n    type: START_TIMER,\n    payload: {\n      time,\n      currTime: 0,\n      startTimer: true,\n    }\n  });\n\n  const setIsAnswerable = (locked, answer, score) => dispatch({\n    type: SET_ANSWERABLE,\n    payload: {\n      locked,\n      answer,\n      score\n    }\n  });\n\n  const addScore = (score) => dispatch({\n    type: ADD_SCORE,\n    payload: score\n  })\n\n  const round = parseInt(state.gameState.round);\n  const baseScore = 200 * round;\n\n  useEffect(() => {\n    if (round === 1 || round === 2) {\n      const questions = tempData.questions.slice(0, 6);\n  \n      const parseQuestions = (questions, number, scoreMultiplier) => (\n        shuffle(questions).slice(0, number).map(({ question, answer }, idx) => (\n          <li className=\"card\" key={`${round}-card-${idx}`}>\n            <QuestionCard\n              question={question}\n              answer={answer}\n              score={scoreMultiplier * baseScore + baseScore * idx}\n              startTimer={startTimer}\n              setIsAnswerable={setIsAnswerable}\n              state={state.gameState}\n              setDisplayQuestion={setDisplayQuestion}\n              username={state.username}\n            />\n          </li>\n        ))\n      );\n  \n      const categoryContainer = questions.map(({ category, easy, medium, hard}, idx) => (\n        <ul className=\"category-container\" key={`category-${idx}`}>\n          <li className=\"category-header\">{category}</li>\n          {parseQuestions(easy, 2, 1)}\n          {parseQuestions(medium, 2, 3)}\n          {parseQuestions(hard, 1, 5)}\n        </ul>\n      ));\n  \n      setQuestionBoardComponent(\n        <section className=\"question-board-container\">\n          <div className=\"content-wrapper\">\n            {categoryContainer}\n          </div>\n        </section>\n      )\n    } else if (round === 3) {\n      // FinalRound\n      setQuestionBoardComponent(\n        <section className=\"question-board-final\">\n          <FinalRound\n            score={state.score}\n            startTimer={startTimer}\n            setIsAnswerable={setIsAnswerable}\n            setDisplayQuestion={setDisplayQuestion}\n            state={state}\n            username={state.username}\n            setRound={setRound}\n          />\n        </section>\n      )\n    } else {\n      // Handle edge cases as well as results\n      setQuestionBoardComponent(\n        <section className=\"question-board-results\">\n          <Results username={state.username} score={state.score}/>\n        </section>\n      )\n    }\n    // TODO: Grab all questions in Game component, this is causing\n    // refresh every display question update\n  }, [round, state.gameState.displayQuestion, state.username])\n\n  return (\n    <section className=\"game-round-container\">\n      <div className=\"top-bar\">\n        <div className=\"top\">\n          <div className=\"round-header\">\n            {/* TODO: Adjust this to be better lmao */}\n            {state.gameState.displayQuestion.open ? \n              \"Get ready to answer...\"\n              :\n              \"Select a category\"\n            }\n          </div>\n          <div className=\"round-info\">\n            <div className=\"score\">\n              <h3>\n                Score: ${state.score}\n              </h3>\n            </div>\n            <div className=\"round-display\">\n              <h3>\n                Round {round}\n              </h3>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"dev\"\n          onClick={() => setRound(state.gameState.round + 1)}\n        >\n          Next Round (Dev)\n        </button>\n      </div>\n\n      <div className=\"content\">\n        {questionBoardComponent}\n      </div>\n\n      <div className=\"bottom-bar\">\n        <TimeRemaining\n          resetTimer={resetTimer}\n          timer={state.timer}\n          maxTime={5}\n          setIsAnswerable={setIsAnswerable}\n          setDisplayQuestion={setDisplayQuestion}\n          gameState={state.gameState}\n        />\n        <AnswerButton\n          state={state.gameState}\n          setIsAnswerable={setIsAnswerable}\n          addScore={addScore}\n          resetTimer={resetTimer}\n          setDisplayQuestion={setDisplayQuestion}\n        />\n      </div>\n    </section>\n  )\n}\n\nexport default GameRound;\n","import React, { useReducer } from 'react';\nimport GameLanding from './GameLanding';\nimport GameRound from './GameRound';\n\nconst Game = () => {\n  const RESET_TIMER = \"RESETTIMER\";\n  const START_TIMER = \"STARTTIMER\";\n  const SET_ANSWERABLE = \"SETANSWERABLE\";\n  const ADD_SCORE = \"ADDSCORE\";\n  const SET_ROUND = \"SETROUND\";\n  const SET_DISPLAY_QUESTION = \"SETDISPLAYQUESTION\";\n  const SET_USERNAME = \"SETUSERNAME\";\n  // TODO: For later, maybe not needed\n  // const RESET_SCORE = \"RESETSCORE\";\n\n  const reducer = (state, action) => {\n    Object.freeze(state);\n\n    let nextState = Object.assign({}, state);\n\n    switch(action.type) {\n      case RESET_TIMER:\n        nextState.timer = {\n          time: 0,\n          currTime: 0,\n          startTimer: false\n        }\n        return nextState;\n      case START_TIMER:\n        nextState.timer = action.payload;\n        nextState.timer.currTime = nextState.timer.time;\n        return nextState;\n      case SET_ANSWERABLE:\n        nextState.gameState.answerable = action.payload;\n        return nextState;\n      case ADD_SCORE:\n        nextState.score = nextState.score + action.payload;\n        return nextState;\n      case SET_ROUND:\n        nextState.gameState.round = action.payload;\n        // TODO: Fix answer persisting\n        nextState.displayQuestion = {\n          open: false,\n          correct: false,\n          userAnswer: '',\n        }\n        return nextState;\n      case SET_DISPLAY_QUESTION:\n        nextState.gameState.displayQuestion = action.payload;\n        return nextState;\n      case SET_USERNAME:\n        nextState.username = action.payload;\n        return nextState;\n      default:\n        return nextState;\n    }\n  }\n\n  // TODO: Store game questions in state\n  const initialState = {\n    username: '',\n    score: 0,\n    timer: {\n      time: 0,\n      currTime: 0,\n      startTimer: false,\n    },\n    gameState: {\n      answerable: {\n        locked: true,\n        answer: '',\n        score: 0,\n      },\n      round: 0,\n      displayQuestion: {\n        open: false,\n        correct: false,\n        userAnswer: '',\n      }\n    }\n  }\n\n  // TODO: Differentiate game end from user answer and time running out\n  // Time running out shows correct answer\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const setRound = (round) => dispatch({\n    type: SET_ROUND,\n    payload: round,\n  });\n\n  const setDisplayQuestion = (open, correct, userAnswer) => dispatch({\n    type: SET_DISPLAY_QUESTION,\n    payload: {\n      open,\n      correct, \n      userAnswer\n    },\n  });\n\n  const setUsername = (username) => dispatch({\n    type: SET_USERNAME,\n    payload: username,\n  });\n\n  return (\n    <section className=\"game-container\">\n      {state.gameState.round === 0 ?\n        <GameLanding\n          setRound={setRound}\n          setUsername={setUsername}\n        />\n        :\n        <GameRound\n          state={state}\n          dispatch={dispatch}\n          RESET_TIMER={RESET_TIMER}\n          START_TIMER={START_TIMER}\n          SET_ANSWERABLE={SET_ANSWERABLE}\n          ADD_SCORE={ADD_SCORE}\n          setRound={setRound}\n          setDisplayQuestion={setDisplayQuestion}\n        />\n      }\n    </section>\n  )\n}\n\nexport default Game;","import Landing from './components/Landing';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Router>\n        <Switch>\n          <Route path=\"/room/:roomId\" >\n            <Game />\n          </Route>\n          <Route path=\"/\">\n            <Landing />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}